initSidebarItems({"enum":[["Node","[`Vdom`] A single generic VDOM node."]],"macro":[["AutoSafe_alias","Mainly for use by frameworks. Canonically located at `auto_safe::AutoSafe_alias`. Creates a custom-visibility alias for `auto_safety::AutoSafe`."]],"mod":[["auto_safety","Transitive (across function boundaries) [`ThreadSafety`] inference, mainly for use by frameworks."],["callback_registry","Callback registry plumbing, for renderers and app runners that support them and need to run indefinitely."],["web","Erasable web type stand-ins used as callback parameters."]],"struct":[["Attribute","[`Vdom`] Represents a single HTML Attr with `name` and `value`."],["Element","[`Vdom`] Represents a single HTMLElement as `name`, `attributes`, `content` and `event_bindings`."],["ElementCreationOptions","[`Vdom`] Maps to options parameter values of Document.createElement() (including undefined) or (currently only) the global is attribute."],["EventBinding","[`Vdom`] Represents a single DOM event binding with `name` and `callback`."],["EventBindingOptions","[`Vdom`] Maps to options parameter values of EventTarget.addEventListener()."],["ReorderableFragment","[`Vdom`] A VDOM node that has its DOM identity preserved during DOM updates even after being repositioned within a (path-)matching [`Node::Keyed`]."],["ThreadBound","[`ThreadSafety`] marker for `!Send + !Sync`."],["ThreadSafe","[`ThreadSafety`] marker for `Send + Sync`."]],"trait":[["ThreadSafety","Marker trait for thread-safety tokens."],["Vdom","Marker trait for VDOM data types, which (almost) all vary by [`ThreadSafety`]."]]});