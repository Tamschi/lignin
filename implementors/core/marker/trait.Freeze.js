(function() {var implementors = {};
implementors["lignin"] = [{"text":"impl&lt;R, C&gt; Freeze for CallbackRegistration&lt;R, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S, C&gt; Freeze for CallbackRef&lt;S, C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DomRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Comment","synthetic":true,"types":[]},{"text":"impl Freeze for Element","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for HtmlElement","synthetic":true,"types":[]},{"text":"impl Freeze for SvgElement","synthetic":true,"types":[]},{"text":"impl Freeze for Text","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Freeze for Node&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Freeze for ReorderableFragment&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Freeze for Element&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ElementCreationOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Freeze for EventBinding&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for EventBindingOptions","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Attribute&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ThreadBound","synthetic":true,"types":[]},{"text":"impl Freeze for ThreadSafe","synthetic":true,"types":[]}];
implementors["lignin_dom"] = [{"text":"impl Freeze for DomDiffer","synthetic":true,"types":[]}];
implementors["lignin_html"] = [{"text":"impl&lt;'a, S&gt; Freeze for Error&lt;'a, S&gt;","synthetic":true,"types":[]}];
implementors["rc_map"] = [{"text":"impl&lt;K, C, V, S&gt; Freeze for RcHashMap&lt;K, C, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, C, V&gt; Freeze for Keys&lt;'a, K, C, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, C, V&gt; Freeze for Counts&lt;'a, K, C, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, C, V&gt; Freeze for CountsMut&lt;'a, K, C, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, C, V&gt; Freeze for Values&lt;'a, K, C, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, C, V&gt; Freeze for ValuesMut&lt;'a, K, C, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, C, V&gt; Freeze for Iter&lt;'a, K, C, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, C, V&gt; Freeze for IterMut&lt;'a, K, C, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, C, V&gt; Freeze for Drain&lt;'a, K, C, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, C, V, S&gt; Freeze for Entry&lt;'a, K, C, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Freeze for Decremented&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, C, V&gt; Freeze for DrainWeak&lt;'a, K, C, V&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for CountSaturatedError","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()